Release 1.0.0 (Release is created as the current code is merged into 'Releases' branch
* Refactoring sbml_model -> test_model
* Added ability to retreve a C++ matrix class from python
* Added the Hessian and Covariance matrices properties to both lmfit and nelder-mead
* Added C API functions to get a matrix underlying array
* Added CAPI functions to get a matrix dimensions
* Added matrix API to the overall Tellurium C API
* Fixed bug in how the norm was calculated in the LM fit plugin
* Got Nelder-Mead working in python script
* Added Test-Model to CMake system
* Added Nelder-Mead to CMake system
* Changed how nr of iterations and number of function evaluations are handled (not the same)
* Added NM code accept more settings on execution, max iterations, alpha, beta and gamma
* Added exposure of NOrm values in NM plugin
* Added calculation of Hessian matrix in NM plugin
* Added exposure of covariance matrix in NM plugin
* Added exposure of residuals in NM plugin
* Added exposure of standarized residuals in NM plugin
* Added normal probability plot of residuals in NM plugin
* Added chi and reduced chi square calculation  in NM plugin
* Added calculation of confidence limits in NM plugin
* Added getEuclideanNorm to Math utils
* Added more tuning parameters to NelderMead
* Added getPropertyAt function to Properties class
* Removing the 'minimization' class. Not needed, pass handle to plugin to objective function
* Got the NM plugin working using residuals and norm instead of chi square
* Changed name of Plugin function setProperty to setPropertyByString
* Moved lmfits objective function to separate unit
* Added getNorm function to math utils
* Added various units to nm fit plugin
* Renamed sbml_model to test_model
* Added new copy constructors to TelluriumData, taking Telluriumdata object and Tellurium data pointer as arguments
* Added conversion operators to double and string properties
* changed name of sbml_model plugin to test_model
* added simulated data and simulated data with noise to test_model plugin
* created example using the NelderMead plugin
* Removed various log statements when reading data
* Added setValue(void*) functions to Property classes
* Added new copy constructor to TelluriumData, taking a pointer to roadrunner data as argument
* Added convenience functions to the abstract plugin interface: getPropertyValueAsString, getPropertyValueHandle and setPropertyValue(name, void*)
* Added conversion operator to Property<string> property
* Embedded the SBML model to model plugin
* Got Nelder Mead example (rr_example) minimizing a sbml model
* Organized NM folder
* Added poco as a third party to Tellurium plugins
* Setting up simple NM example with RoadRunner
* Added new simplex method, simplex2, that allow user data to be passed into the callback function
* Added NelderMead example for a simple sbml model
* Nelder-Mead work
* First compile of NelderMead plugin
* Initial commit of Nelder Mead plugin sources
* Cleaned up (removed obsolete) files in the plugins site_packages folder
* Added API version info to CPP/C and Python API's
* Added getCopyright function to CPP/C and Python API's
* White space cleanup in python ctypes api
* Added Wilberts model and data
* Added LMFit engine status message as a plugin property
* Improved exception handling when fitting is failing
* Added plugin C API function getPluginPropertyValueAsString(pluginHandle, "NameOfProperty")
* Ran some MonteCarlo
* Added python script showing MonteCarlo parameters as a histogram
* Updated Monte Carlo plugin to expose fitted parameters (as tellurium Data) from each monte carlo run.
* Added a 'Current' parameters property that can be used to monitor calculated parameters as the MOnte Carlo progresses
* Added some more files
* Updated doxy introduction in OO python file
* Updated python doxygen example docs
* Merge branch 'master' of https://github.com/sys-bio/telPlugins
* Updated documentation
* Created example folder containing scripts mainly using the raw python API
* Renamed telLMFit1
* Adding property to monitor parameters in each MC run (onProgress)
* Added script to read monte carlo data sets
* Implemented the first python Monte Carlo script
* Minor update
* Updated installation of Python examples
* Updated all python examples to use the sbml model plugin as an example model
* Added catch of exception in Python plugins execute method
* Added exception in lm fit plugin for the case the chi square plugin is not loaded
* Organized examples into folders

Release 0.6.9 (2014-02-27)
* installer scripts added (MG)
* Fixed bug when copying property container (TK)
* Got Monte Carlo parameter generation working (TK)
* Added code that runs minimization on each Monte Carlo data set (TK)
* Adding example on copying a property container, i.e. Properties (TK)
* Fixed reading roadrunner data with more columns than 100 (TK)
* Added conversion operators to properties (TK)
* Implemented creation of Monte Carlo Data sets (TK)
* Added reset function to Monte Carlo worker (TK)
* Added logging API to telplugins (TK)
* Got initial creation of residuals in Monte Carlo implemented (TK)
* Added C API function getPluginPropertyValueHandle (TK)
* Added build of roadrunner projects (TK)
* Removed some obsolete roadrunner functions (TK)
* Added Mersien-Twister random number generator yo use with the monte carlo bs plugin (TK)
* Initial commit of Monte Carlo BootStrap plugin (TK)
* Moved all plugins to beta folder (TK)
* Fixed compiling all plugins using new modules (TK)
* Added register and unregister handle functions to plugins C API (TK)
* Many changes regarding restructuring into submodules and adding jobs API to the plugins (TK)
* RE-organizing plugins source folder (TK)
* Added jobs C API (TK)
* Renamed jobs api files to have tel as prefix (TK)
* Added jobs api to TelluriumPlugins (TK)
* Implemented calculation of Hessian in lmfit (TK)
* Implemented calculation of Covariance matrix, from the Hessian in lmfit (TK)
* Implemented calculation of confidence intervals for parameters in lmfit (TK)
* Added confidence limit, Hessian and Covariance matrix property to lmfit (TK)
* Added libstruct matrix to Tellurium (TK)
* Added two parameters model (TK)
* Added example scripts for two parameter estimation (TK)
* Added script to calculate the Hessian (TK)
* Cleaning up somewhat. (TK)
* Added script to calculate derivatives (TK)
* Added more test files fr parameter estimation (TK)
* Updated python script to look at chi square as a function of a parameter (TK)
* Added Python script that calculates chi square as a function of a model parameter (TK)
* Added/fixed python calculation of a chi square (TK)
* Added demo script on how to write tellurium data from python, including weights (TK)
* Added get and setweight functions to python DataSeries object (TK)
* Added python example for calculating a chi square (TK)
* Added folder for python parameter_minimization examples (TK)
* Added example loading/simulating a model using the model plugin (telModelPluginDemo.py) (TK)
* Added some const correctness to plugin manager (TK)
* Added passing of the plugin manager handle to SBMLModel plugin (TK)
* Added/fixed new plugin holding one sbml model, named sbml_model (TK)
* Added new plugin to hold example data, such as a model and test experimental data (TK)
* Removed obsolete python functions, getRRHandleFromPlugin and assignPluginInput (TK)
* Removed obsolete commented out code in telplugin_utilities.cpp (TK)
* Added telArrayedParameter to CMake system (TK)
* Added start,endtime and number of points to parameterScan plugin (TK)
* Added ChiSqquare plugin to CMake (TK)
* Implemented chi-square as a function of a model parameter (TK)
* Fixed bug in appending data to TelluriumData (TK)
* Added Arrayed parameter class to plugins library (TK)
* Added an arrayedParameter class (TK)
* Got the chi square plugin to work and behave properly (TK)
* Updated chisquare plugin (TK)
* Added comments field to TelluriumData (TK)
* changed compareNOCase function to return boolean instead of int (TK)
* Added pluigin to calculate chi square (TK)
* Changed name of all RRHandle stuff to TELHandle (TK)
* Added python script to plot data from the stat plugin (TK)
* Added new statistics plugin (TK)
* Added python example to create a Normal Probability plot (TK)
* Added functions to standardize a population (TK)
* Added function to calculate a Normal Probability plot (Q-Q plot) (TK)
* Added functions normsdist and invnormsdist to mimick excels NORMS.INV.DIST functions (to obtain Q-Q plot) (TK)
* Added functions to calculate chi square (TK)
* Added telMathUtils unit to core library, holding math related functions (TK)
* Added property and calculations for StandardizedResiduals (TK)
* Added properties for NormalProbabilityOfResiduals, ChiSquare and ReducedChiSquare (TK)
* Added example telLMFit3.py to visualize fitting statistics (TK)
* Fixed a bug in telplugins.py, related to strip whitespace and ' character from data column header (TK)

Release 0.6.8 (2014-01-27)
==========================
* Implemented capture of Norms values during a fitting session, captured by the Norms property. (TK)
* Updated LMFit PDF with documentation on how to use the the Norms property. (TK)
* Updated Noise PDF documentation with missing Progress property docs. (TK)
* Update lmfit2 python example to print the norms property (TK)
* Changed noise plugins progress property to be of type double  (TK)

Release 0.6.7 (2014-01-24)
==========================
* Changed roadRunnerData -> telluriumData as the name of a TelluriumData Property (TK)
* Added exception handling to handle bad handles in C API (TK)
* Removed getRoadRunnerDataHandle(rrInstance) function in Python ctypes API (TK)
* Removed obsolete casting code in telplugins_cpp_support.cpp (TK)
* Created a handle manager for the C api, to keep track of handles created (TK)
* There will be just one type of Handles, TELHandle (TK)
* Added Tellurium exception class (TK)
* Changed so trying to load a plugin twice is not an error. (TK)
* Added extra example to noise plugin pdf docs (TK)
* Added getPluginName, getPluginVersion, getPluginCopyright API functions (C and Python) (TK)
* Updated Noise plugin noise generation (TK)
* Added set/get columndataheader by index in all API's (TK)

Release 0.6.6 (2014-01-12)
==========================
* Initial commit of plugin and third party source from roadrunner repository at: https://github.com/AndySomogyi/roadrunner (TK)


